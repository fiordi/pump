# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-05-27 17:33
from __future__ import unicode_literals

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import picklefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(default=b'Undefined', null=True)),
                ('description', models.TextField(null=True)),
                ('closed', models.BooleanField(default=False)),
                ('subscrNumber', models.IntegerField(default=False)),
                ('startDate', models.DateTimeField(null=True)),
                ('endDate', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CourseCatalog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(default=b'Course Catalog', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CourseState',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(default=b'Undefined', null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default=b'Name', max_length=30, null=True)),
                ('surname', models.CharField(default=b'Surname', max_length=30, null=True)),
                ('email', models.EmailField(default=b'Email', max_length=254, null=True)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128)),
                ('type', models.TextField(default=b'Type of user', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Packet',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(default=b'Undefined', null=True)),
                ('description', models.TextField(null=True)),
                ('price', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('startDate', models.DateTimeField(null=True)),
                ('endDate', models.DateTimeField(null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=b'static/packet_images/')),
                ('courses', models.ManyToManyField(blank=True, related_name='courses', to='pump_app.Course')),
            ],
        ),
        migrations.CreateModel(
            name='PacketCatalog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(default=b'Packet Catalog', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PacketState',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(default=b'Undefined', null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='RepeatedLesson',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('weekDay', models.IntegerField(null=True)),
                ('startDate', models.DateField(null=True)),
                ('endDate', models.DateField(null=True)),
                ('startTime', models.TimeField(null=True)),
                ('endTime', models.TimeField(null=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='RepeatedLessons', to='pump_app.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('dateTime', models.DateTimeField(null=True)),
                ('amount_prediscount', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('amount', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('applied_strategies', picklefield.fields.PickledObjectField(blank=True, default={}, editable=False, null=True)),
                ('packets', models.ManyToManyField(blank=True, related_name='sales', to='pump_app.Packet')),
            ],
        ),
        migrations.CreateModel(
            name='SaleState',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(default=b'Undefined', null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SingleLesson',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(null=True)),
                ('startTime', models.TimeField(null=True)),
                ('endTime', models.TimeField(null=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='single_lessons', to='pump_app.Course')),
                ('repeatedlesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='single_lessons', to='pump_app.RepeatedLesson')),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('startDate', models.DateTimeField(null=True)),
                ('endDate', models.DateTimeField(null=True)),
                ('packets', models.ManyToManyField(related_name='subscriptions', to='pump_app.Packet')),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionState',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(default=b'Undefined', null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CourseActivated',
            fields=[
                ('coursestate_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pump_app.CourseState')),
            ],
            bases=('pump_app.coursestate',),
        ),
        migrations.CreateModel(
            name='CourseDeactivated',
            fields=[
                ('coursestate_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pump_app.CourseState')),
            ],
            bases=('pump_app.coursestate',),
        ),
        migrations.CreateModel(
            name='CourseIncomplete',
            fields=[
                ('coursestate_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pump_app.CourseState')),
            ],
            bases=('pump_app.coursestate',),
        ),
        migrations.CreateModel(
            name='CourseTrashed',
            fields=[
                ('coursestate_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pump_app.CourseState')),
            ],
            bases=('pump_app.coursestate',),
        ),
        migrations.CreateModel(
            name='PacketActivated',
            fields=[
                ('packetstate_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pump_app.PacketState')),
            ],
            bases=('pump_app.packetstate',),
        ),
        migrations.CreateModel(
            name='PacketDeactivated',
            fields=[
                ('packetstate_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pump_app.PacketState')),
            ],
            bases=('pump_app.packetstate',),
        ),
        migrations.CreateModel(
            name='PacketIncomplete',
            fields=[
                ('packetstate_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pump_app.PacketState')),
            ],
            bases=('pump_app.packetstate',),
        ),
        migrations.CreateModel(
            name='SaleCancelled',
            fields=[
                ('salestate_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pump_app.SaleState')),
            ],
            bases=('pump_app.salestate',),
        ),
        migrations.CreateModel(
            name='SaleCompleted',
            fields=[
                ('salestate_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pump_app.SaleState')),
            ],
            bases=('pump_app.salestate',),
        ),
        migrations.CreateModel(
            name='SaleIncomplete',
            fields=[
                ('salestate_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pump_app.SaleState')),
            ],
            bases=('pump_app.salestate',),
        ),
        migrations.CreateModel(
            name='SeniorCustomer',
            fields=[
                ('customer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pump_app.Customer')),
            ],
            bases=('pump_app.customer',),
        ),
        migrations.CreateModel(
            name='StudentCustomer',
            fields=[
                ('customer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pump_app.Customer')),
            ],
            bases=('pump_app.customer',),
        ),
        migrations.CreateModel(
            name='SubscriptionActive',
            fields=[
                ('subscriptionstate_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pump_app.SubscriptionState')),
            ],
            bases=('pump_app.subscriptionstate',),
        ),
        migrations.CreateModel(
            name='SubscriptionInactive',
            fields=[
                ('subscriptionstate_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pump_app.SubscriptionState')),
            ],
            bases=('pump_app.subscriptionstate',),
        ),
        migrations.CreateModel(
            name='SubscriptionIncomplete',
            fields=[
                ('subscriptionstate_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pump_app.SubscriptionState')),
            ],
            bases=('pump_app.subscriptionstate',),
        ),
        migrations.AddField(
            model_name='subscription',
            name='state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='pump_app.SubscriptionState', to_field=b'name'),
        ),
        migrations.AddField(
            model_name='sale',
            name='state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='pump_app.SaleState', to_field=b'name'),
        ),
        migrations.AddField(
            model_name='sale',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='pump_app.Customer'),
        ),
        migrations.AddField(
            model_name='packet',
            name='packetcatalog',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='packets', to='pump_app.PacketCatalog'),
        ),
        migrations.AddField(
            model_name='packet',
            name='state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='packets', to='pump_app.PacketState', to_field=b'name'),
        ),
        migrations.AddField(
            model_name='customer',
            name='subscription',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer', to='pump_app.Subscription'),
        ),
        migrations.AddField(
            model_name='customer',
            name='user',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, to_field=b'username'),
        ),
        migrations.AddField(
            model_name='course',
            name='coursecatalog',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='pump_app.CourseCatalog'),
        ),
        migrations.AddField(
            model_name='course',
            name='state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='pump_app.CourseState', to_field=b'name'),
        ),
    ]
