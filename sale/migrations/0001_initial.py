# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-07-12 20:29
from __future__ import unicode_literals

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import picklefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('packet', '0001_initial'),
        ('customer', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CompositePricingStrategy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MorePacketsStrategy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('dateTime', models.DateTimeField(null=True)),
                ('amount_prediscount', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('amount', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('applied_strategies', picklefield.fields.PickledObjectField(blank=True, default={}, editable=False, null=True)),
                ('packets', models.ManyToManyField(blank=True, related_name='sales', to='packet.Packet')),
            ],
        ),
        migrations.CreateModel(
            name='SaleLineItem',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(default=0)),
                ('packet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='saleslineitems', to='packet.Packet')),
                ('sale', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='saleslineitems', to='sale.Sale')),
            ],
        ),
        migrations.CreateModel(
            name='SalePricingStrategyFactory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SaleState',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(default=b'Undefined', null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentCustomerStrategy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CancelledSale',
            fields=[
                ('salestate_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sale.SaleState')),
            ],
            bases=('sale.salestate',),
        ),
        migrations.CreateModel(
            name='CompletedSale',
            fields=[
                ('salestate_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sale.SaleState')),
            ],
            bases=('sale.salestate',),
        ),
        migrations.CreateModel(
            name='CompositeBestForCustomerPricingStrategy',
            fields=[
                ('compositepricingstrategy_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sale.CompositePricingStrategy')),
            ],
            options={
                'abstract': False,
            },
            bases=('sale.compositepricingstrategy',),
        ),
        migrations.CreateModel(
            name='CompositeBestForStorePricingStrategy',
            fields=[
                ('compositepricingstrategy_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sale.CompositePricingStrategy')),
            ],
            options={
                'abstract': False,
            },
            bases=('sale.compositepricingstrategy',),
        ),
        migrations.CreateModel(
            name='IncompleteSale',
            fields=[
                ('salestate_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sale.SaleState')),
            ],
            bases=('sale.salestate',),
        ),
        migrations.AddField(
            model_name='sale',
            name='state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='sale.SaleState', to_field=b'name'),
        ),
        migrations.AddField(
            model_name='sale',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='customer.Customer'),
        ),
    ]
