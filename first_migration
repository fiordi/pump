# -*- coding: utf-8 -*-# Generated by Django 1.9.1 on 2016-05-20 11:39from __future__ import unicode_literalsfrom django.db.models.signals import post_initfrom django.db import migrationsdef create_singleton_objects(apps, schema_editor):    app_name = "pump_app"    from pump_app.model_classes.PacketState import PacketActivated, PacketDeactivated, PacketIncomplete    PacketActivated().save()    PacketActivated.objects.all()[0].setName()    PacketIncomplete().save()    PacketIncomplete.objects.all()[0].setName()    PacketDeactivated().save()    PacketDeactivated.objects.all()[0].setName()    from pump_app.model_classes.CourseState import CourseActivated, CourseDeactivated, CourseIncomplete, CourseTrashed    CourseActivated().save()    CourseActivated.objects.all()[0].setName()    CourseIncomplete().save()    CourseIncomplete.objects.all()[0].setName()    CourseDeactivated().save()    CourseDeactivated.objects.all()[0].setName()    CourseTrashed().save()    CourseTrashed.objects.all()[0].setName()    from pump_app.model_classes.SaleState import SaleCompleted, SaleIncomplete, SaleCancelled    SaleCompleted().save()    SaleCompleted.objects.all()[0].setName()    SaleIncomplete().save()    SaleIncomplete.objects.all()[0].setName()    SaleCancelled().save()    SaleCancelled.objects.all()[0].setName()    from pump_app.model_classes.SubscriptionState import SubscriptionActive, SubscriptionInactive, SubscriptionIncomplete    SubscriptionActive().save()    SubscriptionActive.objects.all()[0].setName()    SubscriptionInactive().save()    SubscriptionInactive.objects.all()[0].setName()    SubscriptionIncomplete().save()    SubscriptionIncomplete.objects.all()[0].setName()    CourseCatalog = apps.get_model(app_name, "CourseCatalog")    CourseCatalog().save()    PacketCatalog = apps.get_model(app_name, "PacketCatalog")    PacketCatalog().save()class Migration(migrations.Migration):    dependencies = [        ('pump_app', '0001_initial'),    ]    operations = [        migrations.RunPython(create_singleton_objects),    ]